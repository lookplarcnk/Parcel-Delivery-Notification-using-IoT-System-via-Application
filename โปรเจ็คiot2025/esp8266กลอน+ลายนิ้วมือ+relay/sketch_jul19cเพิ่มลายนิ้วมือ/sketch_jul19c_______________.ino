
#include <Adafruit_Fingerprint.h>
#include <SoftwareSerial.h>

#define ENROLL_BUTTON     D1
#define DELETE_BUTTON     D2
#define DELETE_ALL_BUTTON D3

SoftwareSerial mySerial(D7, D8); // RX, TX
Adafruit_Fingerprint finger(&mySerial);

uint8_t id = 1;

void setup() {
  Serial.begin(115200);
  delay(2000); // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô

  pinMode(ENROLL_BUTTON, INPUT_PULLUP);
  pinMode(DELETE_BUTTON, INPUT_PULLUP);
  pinMode(DELETE_ALL_BUTTON, INPUT_PULLUP);

  Serial.println("üîê ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠...");

  finger.begin(57600);
  if (finger.verifyPassword()) {
    Serial.println("‚úÖ ‡∏û‡∏ö‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠‡πÅ‡∏•‡πâ‡∏ß");
  } else {
    Serial.println("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≤‡∏¢ TX/RX ‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á");
    while (1) delay(1);
  }
}

void loop() {
  if (digitalRead(ENROLL_BUTTON) == LOW) {
    while (digitalRead(ENROLL_BUTTON) == LOW); // ‡∏£‡∏≠‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏∏‡πà‡∏°
    enrollFingerprint(id++);
  }

  if (digitalRead(DELETE_BUTTON) == LOW) {
    while (digitalRead(DELETE_BUTTON) == LOW);
    Serial.println("üî¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà ID ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÉ‡∏ô Serial Monitor:");
    while (!Serial.available());
    int deleteId = Serial.parseInt();
    while (Serial.available()) Serial.read(); // ‡∏•‡πâ‡∏≤‡∏á Serial buffer
    deleteFingerprint(deleteId);
  }

  if (digitalRead(DELETE_ALL_BUTTON) == LOW) {
    while (digitalRead(DELETE_ALL_BUTTON) == LOW);
    deleteAllFingerprints();
  }
}

void enrollFingerprint(int id) {
  Serial.print("üì≤ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠ ID "); Serial.println(id);
  int p = -1;
  Serial.println("üëâ ‡∏ß‡∏≤‡∏á‡∏ô‡∏¥‡πâ‡∏ß‡∏ö‡∏ô‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå...");

  while ((p = finger.getImage()) != FINGERPRINT_OK) {
    if (p != FINGERPRINT_NOFINGER) {
      Serial.println("‚ùå ‡∏≠‡πà‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"); return;
    }
  }

  p = finger.image2Tz(1);
  if (p != FINGERPRINT_OK) {
    Serial.println("‚ùå ‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"); return;
  }

  Serial.println("‚úã ‡∏¢‡∏Å‡∏ô‡∏¥‡πâ‡∏ß‡∏≠‡∏≠‡∏Å...");
  delay(2000);
  while (finger.getImage() != FINGERPRINT_NOFINGER);

  Serial.println("üëâ ‡∏ß‡∏≤‡∏á‡∏ô‡∏¥‡πâ‡∏ß‡πÄ‡∏î‡∏¥‡∏°‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á...");
  while ((p = finger.getImage()) != FINGERPRINT_OK) {
    if (p != FINGERPRINT_NOFINGER) {
      Serial.println("‚ùå ‡∏≠‡πà‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"); return;
    }
  }

  p = finger.image2Tz(2);
  if (p != FINGERPRINT_OK) {
    Serial.println("‚ùå ‡πÅ‡∏õ‡∏•‡∏á‡∏†‡∏≤‡∏û‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"); return;
  }

  p = finger.createModel();
  if (p != FINGERPRINT_OK) {
    Serial.println("‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à"); return;
  }

  p = finger.storeModel(id);
  if (p == FINGERPRINT_OK) {
    Serial.println("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
  } else {
    Serial.println("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  }
}

void deleteFingerprint(int id) {
  int p = finger.deleteModel(id);
  if (p == FINGERPRINT_OK) {
    Serial.print("‚úÖ ‡∏•‡∏ö‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠ ID "); Serial.print(id); Serial.println(" ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  } else {
    Serial.println("‚ùå ‡∏•‡∏ö‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö ID ‡∏ô‡∏µ‡πâ");
  }
}

void deleteAllFingerprints() {
  int p = finger.emptyDatabase();
  if (p == FINGERPRINT_OK) {
    Serial.println("‚úÖ ‡∏•‡∏ö‡∏•‡∏≤‡∏¢‡∏ô‡∏¥‡πâ‡∏ß‡∏°‡∏∑‡∏≠‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  } else {
    Serial.println("‚ùå ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
  }
}
